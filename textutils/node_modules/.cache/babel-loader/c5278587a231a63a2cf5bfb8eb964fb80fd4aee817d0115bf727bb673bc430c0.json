{"ast":null,"code":"var _jsxFileName = \"/Users/sandeshvora/Desktop/react course/textutils/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setDarkMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setDarkMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setDarkMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"5L1xWFMIrloSYPSPulcdSZlS7wE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setDarkMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["/Users/sandeshvora/Desktop/react course/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert  from './components/Alert';\n// import About from './components/About';\n\nfunction App() {\n\tconst [mode,setDarkMode] = useState('light');//whether dark mode is enabled or not\n\tconst [alert,setAlert] = useState(null);\n\tconst showAlert = (message,type)=>{\n\t\tsetAlert({\n\t\t\tmsg:message,\n\t\t\ttype:type\n\t\t})\n\t}\n\tconst toggleMode = ()=>{\n\t\tif(mode==='light'){\n\t\t\tsetDarkMode('dark');\n\t\t\tdocument.body.style.backgroundColor = '#042743';\n\t\t\tshowAlert(\"Dark Mode has been enabled\",\"success\")\n\t\t}\n\t\telse{\n\t\t\tsetDarkMode('light');\n\t\t\tdocument.body.style.backgroundColor = 'white';\n\t\t\tshowAlert(\"Light Mode has been enabled\",\"success\")\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t<Navbar title=\"TextUtils\" aboutText=\"About\" mode = {mode} toggleMode = {toggleMode}/>\n\t\t<Alert  alert={alert}> </Alert>\n\t\t<div className=\"container my-3\"> \n\t\t<TextForm heading=\"Enter text to analyze\" mode={mode} />\n\t\t</div>\n\t\t{/* <About /> */}\n\t\t</> \n\t);\n}\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAO,oBAAoB;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAACC,WAAW,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC;EAC7C,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACRI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACN,CAAC,CAAC;EACH,CAAC;EACD,MAAME,UAAU,GAAGA,CAAA,KAAI;IACtB,IAAGR,IAAI,KAAG,OAAO,EAAC;MACjBC,WAAW,CAAC,MAAM,CAAC;MACnBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CR,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IAClD,CAAC,MACG;MACHH,WAAW,CAAC,OAAO,CAAC;MACpBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACnD;EACD,CAAC;EACD,oBACCT,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA,CAACJ,MAAM;MAACuB,KAAK,EAAC,WAAW;MAACC,SAAS,EAAC,OAAO;MAACf,IAAI,EAAIA,IAAK;MAACQ,UAAU,EAAIA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrFxB,OAAA,CAACF,KAAK;MAAES,KAAK,EAAEA,KAAM;MAAAW,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/BxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC/BlB,OAAA,CAACH,QAAQ;QAAC6B,OAAO,EAAC,uBAAuB;QAACrB,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA,eAEJ,CAAC;AAEL;AAACpB,EAAA,CA/BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}