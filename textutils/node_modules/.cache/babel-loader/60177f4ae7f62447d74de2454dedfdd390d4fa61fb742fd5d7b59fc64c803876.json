{"ast":null,"code":"var _jsxFileName = \"/Users/sandeshvora/Desktop/react course/textutils/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import Alert  from './components/Alert';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setDarkMode] = useState('light'); //whether dark mode is enabled or not\n  // const [alert,setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setDarkMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - DarkMode';\n    } else {\n      setDarkMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - LightMode';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"MPW6KqB7u1vqKID7bMIoqdwggWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","About","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setDarkMode","showAlert","message","type","setAlert","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["/Users/sandeshvora/Desktop/react course/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import Alert  from './components/Alert';\nimport About from './components/About';\n\nfunction App() {\n\tconst [mode,setDarkMode] = useState('light');//whether dark mode is enabled or not\n\t// const [alert,setAlert] = useState(null);\n\tconst showAlert = (message,type)=>{\n\t\tsetAlert({\n\t\t\tmsg:message,\n\t\t\ttype:type\n\t\t})\n\t\tsetTimeout(()=>{setAlert(null);},2000);\n\t}\n\tconst toggleMode = ()=>{\n\t\tif(mode==='light'){\n\t\t\tsetDarkMode('dark');\n\t\t\tdocument.body.style.backgroundColor = '#042743';\n\t\t\tshowAlert(\"Dark Mode has been enabled\",\"success\");\n\t\t\tdocument.title = 'TextUtils - DarkMode';\n\t\t}\n\t\telse{\n\t\t\tsetDarkMode('light');\n\t\t\tdocument.body.style.backgroundColor = 'white';\n\t\t\tshowAlert(\"Light Mode has been enabled\",\"success\");\n\t\t\tdocument.title = 'TextUtils - LightMode';\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t<Navbar title=\"TextUtils\" aboutText=\"About\" mode = {mode} toggleMode = {toggleMode}/>\n\t\t{/* <Alert  alert={alert}> </Alert> */}\n\t\t<div className=\"container my-3\"> \n\t\t<TextForm showAlert={showAlert} heading=\"Enter text to analyze\" mode={mode} />\n\t\t</div>\n\t\t<About />\n\t\t</> \n\t);\n}\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAACC,WAAW,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC;EAC7C;EACA,MAAMY,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IACjCC,QAAQ,CAAC;MACRC,GAAG,EAACH,OAAO;MACXC,IAAI,EAACA;IACN,CAAC,CAAC;IACFG,UAAU,CAAC,MAAI;MAACF,QAAQ,CAAC,IAAI,CAAC;IAAC,CAAC,EAAC,IAAI,CAAC;EACvC,CAAC;EACD,MAAMG,UAAU,GAAGA,CAAA,KAAI;IACtB,IAAGR,IAAI,KAAG,OAAO,EAAC;MACjBC,WAAW,CAAC,MAAM,CAAC;MACnBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CV,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;MACjDO,QAAQ,CAACI,KAAK,GAAG,sBAAsB;IACxC,CAAC,MACG;MACHZ,WAAW,CAAC,OAAO,CAAC;MACpBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CV,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;MAClDO,QAAQ,CAACI,KAAK,GAAG,uBAAuB;IACzC;EACD,CAAC;EACD,oBACClB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA,CAACJ,MAAM;MAACsB,KAAK,EAAC,WAAW;MAACE,SAAS,EAAC,OAAO;MAACf,IAAI,EAAIA,IAAK;MAACQ,UAAU,EAAIA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAErFxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC/BnB,OAAA,CAACH,QAAQ;QAACU,SAAS,EAAEA,SAAU;QAACmB,OAAO,EAAC,uBAAuB;QAACrB,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACNxB,OAAA,CAACF,KAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACP,CAAC;AAEL;AAACpB,EAAA,CAlCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}