{"ast":null,"code":"import _slicedToArray from\"/Users/sandeshvora/Desktop/react course/textutils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';// import About from './components/About';\nimport React,{useState}from'react';import Alert from'./components/Alert';// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];// Whether dark mode is enabled or not\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#042743';showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode},new Date()),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"TextUtils - word counter\",mode:mode})})]});}export default App;","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","Date","className","heading"],"sources":["/Users/sandeshvora/Desktop/react course/textutils/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Routes> */}\n      <TextForm showAlert={showAlert} heading=\"TextUtils - word counter\" mode={mode}/>\n            {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"TextUtils - word counter\" mode={mode}/>}>\n            </Route> */}\n            {/* <Route exact path=\"/about\" element={<About mode={mode} />}>\n            \n            </Route> */}\n\n      {/* </Routes> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;"],"mappings":"uIAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C;AACA,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC;AACA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAwBT,QAAQ,CAAC,OAAO,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAuB;AAC3C,IAAAI,UAAA,CAA0Bd,QAAQ,CAAC,IAAI,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAAEC,IAAI,CAAG,CAC/BH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,UAAM,CACbL,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,CAED,GAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAO,CACrB,GAAGX,IAAI,GAAK,OAAO,CAAC,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IACG,CACFL,OAAO,CAAC,OAAO,CAAC,CAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CACD,mBACEX,KAAA,CAAAF,SAAA,EAAAuB,QAAA,eAEEzB,IAAA,CAACN,MAAM,EAACgC,KAAK,CAAC,WAAW,CAACjB,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAEA,UAAW,EAAM,GAAI,CAAAO,IAAI,CAAC,CAAI,CAAC,cACjF3B,IAAA,CAACF,KAAK,EAACe,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBb,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAE/BzB,IAAA,CAACL,QAAQ,EAACoB,SAAS,CAAEA,SAAU,CAACc,OAAO,CAAC,0BAA0B,CAACpB,IAAI,CAAEA,IAAK,CAAC,CAAC,CAQ3E,CAAC,EAEN,CAAC,CAEP,CAEA,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}